apiVersion: v1
items:
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/"},"name":"elasticsearch","namespace":"user111"},"spec":{"rules":[{"host":"111-elastic.training.csol.cloud","http":{"paths":[{"backend":{"serviceName":"elasticsearch","servicePort":9200},"path":"/"},{"backend":{"serviceName":"elasticsearch","servicePort":9300},"path":"/web"}]}}]}}
      nginx.ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: "2019-12-07T12:17:16Z"
    generation: 1
    name: elasticsearch
    namespace: user111
    resourceVersion: "508836"
    selfLink: /apis/extensions/v1beta1/namespaces/user111/ingresses/elasticsearch
    uid: 81d987a9-18eb-11ea-94c4-42010a9c0043
  spec:
    rules:
    - host: 111-elastic.training.csol.cloud
      http:
        paths:
        - backend:
            serviceName: elasticsearch
            servicePort: 9200
          path: /
        - backend:
            serviceName: elasticsearch
            servicePort: 9300
          path: /web
  status:
    loadBalancer:
      ingress:
      - ip: 34.89.179.135
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/"},"name":"grafana-ingress","namespace":"user111"},"spec":{"rules":[{"host":"111-grafana.training.csol.cloud","http":{"paths":[{"backend":{"serviceName":"grafana","servicePort":80},"path":"/"}]}}]}}
      nginx.ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: "2019-12-07T12:47:33Z"
    generation: 1
    name: grafana-ingress
    namespace: user111
    resourceVersion: "516290"
    selfLink: /apis/extensions/v1beta1/namespaces/user111/ingresses/grafana-ingress
    uid: bcdafa78-18ef-11ea-94c4-42010a9c0043
  spec:
    rules:
    - host: 111-grafana.training.csol.cloud
      http:
        paths:
        - backend:
            serviceName: grafana
            servicePort: 80
          path: /
  status:
    loadBalancer:
      ingress:
      - ip: 34.89.179.135
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/"},"name":"kibana-ingress","namespace":"user111"},"spec":{"rules":[{"host":"111-kibana.training.csol.cloud","http":{"paths":[{"backend":{"serviceName":"kibana","servicePort":5601},"path":"/"}]}}]}}
      nginx.ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: "2019-12-07T13:41:16Z"
    generation: 1
    name: kibana-ingress
    namespace: user111
    resourceVersion: "529917"
    selfLink: /apis/extensions/v1beta1/namespaces/user111/ingresses/kibana-ingress
    uid: 3df69c7a-18f7-11ea-94c4-42010a9c0043
  spec:
    rules:
    - host: 111-kibana.training.csol.cloud
      http:
        paths:
        - backend:
            serviceName: kibana
            servicePort: 5601
          path: /
  status:
    loadBalancer:
      ingress:
      - ip: 34.89.179.135
- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"networking.k8s.io/v1beta1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/"},"name":"prometheus","namespace":"user111"},"spec":{"rules":[{"host":"111-prometheus.training.csol.cloud","http":{"paths":[{"backend":{"serviceName":"prometheus","servicePort":9090},"path":"/graph"},{"backend":{"serviceName":"prometheus","servicePort":9090},"path":"/metrics"}]}}]}}
      nginx.ingress.kubernetes.io/rewrite-target: /
    creationTimestamp: "2019-12-07T14:41:24Z"
    generation: 1
    name: prometheus
    namespace: user111
    resourceVersion: "545471"
    selfLink: /apis/extensions/v1beta1/namespaces/user111/ingresses/prometheus
    uid: a48d1422-18ff-11ea-94c4-42010a9c0043
  spec:
    rules:
    - host: 111-prometheus.training.csol.cloud
      http:
        paths:
        - backend:
            serviceName: prometheus
            servicePort: 9090
          path: /graph
        - backend:
            serviceName: prometheus
            servicePort: 9090
          path: /metrics
  status:
    loadBalancer:
      ingress:
      - ip: 34.89.179.135
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
